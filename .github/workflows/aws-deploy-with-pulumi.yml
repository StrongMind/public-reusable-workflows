name: Deploy to AWS

on:
  workflow_call:
    inputs:
      runner:
        required: false
        default: "ubuntu-latest-m"
        type: string
      environment-name:
        required: true
        type: string
      web-container-image:
        required: false
        type: string
        default: ${{ github.event.repository.name }}:${{ github.sha }}
      worker-container-image:
        required: false
        type: string
        default: ${{ github.event.repository.name }}:${{ github.sha }}
      pulumi-command:
        required: false
        type: string
        default: "up"
      pulumi-bucket:
        required: false
        type: string
        default: "pulumi-state-sm"

env:
  AWS_REGION: us-west-2

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ${{ inputs.runner }}
    environment: ${{ inputs.environment-name }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      if: inputs.pulumi-bucket == 'pulumi-state-sm'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.STRONGMIND_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.STRONGMIND_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Configure AWS credentials
      if: inputs.pulumi-bucket == 'pulumi-state-sm-tesla'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.CANVAS_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.CANVAS_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up Python
      if: ${{ inputs.pulumi-command == 'refresh' ||  inputs.pulumi-command == 'down' }}
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      if: ${{ inputs.pulumi-command == 'refresh' ||  inputs.pulumi-command == 'down' }}
      run: |
        cd ./infrastructure/
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt  
        cd ..

    - name: Deploy with Pulumi
      env:
        PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
        CONTAINER_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.web-container-image }}
        WORKER_CONTAINER_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.worker-container-image }}
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
        ENVIRONMENT_NAME: ${{ inputs.environment-name }}
        BINARY_SNS_TOPIC_ARN: ${{ secrets.BINARY_SNS_TOPIC_ARN }}
        STRONGMIND_SERVICE_UPDATES_TOPIC_ARN: ${{ secrets.STRONGMIND_SERVICE_UPDATES_TOPIC_ARN }}
        ID_MAPPER_TOKEN: ${{ secrets.ID_MAPPER_TOKEN }}
        ID_MAPPER_DOMAIN: ${{ secrets.ID_MAPPER_DOMAIN }}
      run: |
        cd ./infrastructure/
        pulumi login s3://${{ inputs.pulumi-bucket }}/${{ github.event.repository.name }}
        pulumi stack init ${{ inputs.environment-name }} --non-interactive || true
        pulumi stack select ${{ inputs.environment-name }}
        pulumi ${{ inputs.pulumi-command }} --yes -v=3
