name: Build docker and Upload to ECR

on:
  workflow_call:
    inputs:
      docker-runner:
        required: false
        default: "ubuntu-latest-m"
        type: string
      runner:
        required: false
        default: "ubuntu-latest-m"
        type: string
      build_args:
        description: List of build args to pass to docker build
        required: false
        type: string
        default: ""
      bundle-no-assets:
        description: Whether to skip assets precompilation
        required: false
        type: string
        default: bundle exec rails db:prepare db:migrate assets:precompile
      ruby-version:
        description: Rails environment to run the tests in
        required: false
        type: string
        default: "3.2.2"
      run-parallel-tests:
        description: Run parallel tests with parallel_tests gem
        required: false
        type: boolean
        default: false
      run-job-per-folder:
        description: "Run tests in separate jobs per folder"
        required: false
        default: false
        type: boolean

env:
  AWS_REGION: us-west-2

permissions:
  contents: read

jobs:

  publish-commit:
    name: publish commit
    uses: strongmind/public-reusable-workflows/.github/workflows/commit-info.yml@main
    if: github.ref == 'refs/heads/main'
    with:
      runner: ${{ inputs.runner }}
    secrets: inherit

  push-docker:
    runs-on: ${{ inputs.docker-runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.STRONGMIND_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STRONGMIND_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: no

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create private repo
        uses: int128/create-ecr-repository-action@v1
        with:
          repository: ${{ github.event.repository.name }}

      - name: Test docker and upload to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.event.repository.name }}
          IMAGE_TAG: ${{ github.sha }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: BUNDLE_GEMS__CONTRIBSYS__COM=${{ secrets.BUNDLE_GEMS__CONTRIBSYS__COM }}

  rspec-test:
    name: Rspec test to code coverage
    uses: Strongmind/public-reusable-workflows/.github/workflows/rspec-test.yml@RD-1810-ecs
    with:
      bundle-no-assets: ${{ inputs.bundle-no-assets }}
      ruby-version: ${{ inputs.ruby-version }}
      run-parallel: ${{ inputs.run-parallel-tests }}
      run-job-per-folder: ${{ inputs.run-job-per-folder }}
      runner: ${{ inputs.runner }}
    secrets: inherit
